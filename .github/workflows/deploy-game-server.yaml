name: Deploy Game Server (Corrected SSM Dependency)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create_infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ./infra_source

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra_source

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve
        working-directory: ./infra_source
    outputs:
      instance_ip: ${{ steps.terraform_apply.outputs.instance_ip }} # Example
      user_pool_client_id: ${{ steps.terraform_apply.outputs.user_pool_client_id }} # Example
      # Add other outputs as needed from your Terraform configuration

  build_mod:
    runs-on: ubuntu-latest
    needs: [create_infra] # Corrected dependency
    steps:
      - uses: actions/checkout@v3
        with:
          repository: LeChienCour/VoiceChatMod
          path: ./mod_source

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adoptium'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./mod_source/gradlew

      - name: Configure Mod
        run: |
          echo "Configuring mod with Terraform outputs..."
          cd ./mod_source/src/main/resources/config
          # Example: Accessing Terraform output directly
          sed -i "s/YOUR_CLIENT_ID/${{ needs.create_infra.outputs.user_pool_client_id }}/g" voicechatmod-common.toml
          # Adjust the sed command based on your config file and variables
          cd ../../../

      - name: Build with Gradle
        run: ./mod_source/gradlew build
    outputs:
      mod_path: ${{ github.workspace }}/mod_source/build/libs/voicechatmod-1.0.jar

  deploy_mod:
    runs-on: ubuntu-latest
    needs: [build_mod, create_infra]
    steps:
      - uses: actions/checkout@v3
        with:
          path: ./deploy_source

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Deploy Mod
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ needs.create_infra.outputs.instance_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Descargando NeoForge..."
            cd /opt/minecraft/server
            wget https://maven.neoforged.net/releases/net/neoforged/neoforge/1.21.1/neoforge-1.21.1-installer.jar
            java -jar neoforge-1.21.1-installer.jar --installServer

            echo "Copiando el mod..."
            cp ${{ needs.build_mod.outputs.mod_path }} /opt/minecraft/server/mods/voicechatmod-1.0.jar

            echo "Iniciando el servidor..."
            sudo systemctl restart minecraft.service

  verify_deployment:
    runs-on: ubuntu-latest
    needs: [deploy_mod]
    steps:
      - name: Placeholder for verification steps
        run: echo "Add verification steps here"